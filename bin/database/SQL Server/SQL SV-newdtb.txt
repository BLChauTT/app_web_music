-- Tạo cơ sở dữ liệu
CREATE DATABASE music_app;
GO

USE music_app;
GO

-- Tạo bảng Role
CREATE TABLE Role (
    role_id INT PRIMARY KEY,
    role_name VARCHAR(50) UNIQUE NOT NULL
);

-- Tạo bảng Account
CREATE TABLE Account (
    account_id INT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role_id INT,
    FOREIGN KEY (role_id) REFERENCES Role(role_id)
);

-- Tạo bảng UserProfile
CREATE TABLE UserProfile (
    profile_id INT PRIMARY KEY,
    account_id INT UNIQUE,
    full_name VARCHAR(100),
    avatar_url VARCHAR(255),
    address TEXT,
    phone_number VARCHAR(20),
    FOREIGN KEY (account_id) REFERENCES Account(account_id)
);

-- Tạo bảng SongDetail
CREATE TABLE SongDetail (
    song_detail_id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    genre VARCHAR(50),
    release_date DATE,
    file_url VARCHAR(255),
    listen_count INT DEFAULT 0, -- Số lượt nghe của bài hát
    status INT DEFAULT 1
);

-- Tạo bảng Author
CREATE TABLE Author (
    author_id INT PRIMARY KEY,
    author_name VARCHAR(255) UNIQUE NOT NULL
);

-- Tạo bảng Song
CREATE TABLE Song (
    song_id INT PRIMARY KEY,
    account_id INT, -- Khóa ngoại liên kết với bảng Account_Song
    song_detail_id INT, -- Khóa ngoại liên kết với bảng SongDetail
    author_id INT, -- Khóa ngoại liên kết với bảng Author
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (song_detail_id) REFERENCES SongDetail(song_detail_id),
    FOREIGN KEY (author_id) REFERENCES Author(author_id)
);

-- Tạo bảng trung gian Account_Song (biết bài hát nào được post bởi ai)
CREATE TABLE Account_Song (
    account_song_id INT PRIMARY KEY,
    account_id INT,
    song_id INT,
    post_date DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (song_id) REFERENCES Song(song_id)
);

-- Tạo bảng Rating
CREATE TABLE Rating (
    rating_id INT PRIMARY KEY,
    account_id INT,
    song_id INT,
    rating INT,
    rating_date DATETIME,
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (song_id) REFERENCES Song(song_id)
);

-- Tạo bảng Comment
CREATE TABLE Comment (
    comment_id INT PRIMARY KEY,
    account_id INT,
    song_id INT,
    comment_text TEXT,
    comment_date DATETIME,
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (song_id) REFERENCES Song(song_id)
);

-- Tạo bảng Favorite
CREATE TABLE Favorite (
    favorite_id INT PRIMARY KEY,
    account_id INT,
    song_id INT,
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (song_id) REFERENCES Song(song_id)
);

-- Tạo bảng Singer
CREATE TABLE Singer (
    singer_id INT PRIMARY KEY,
    singer_name VARCHAR(255) UNIQUE NOT NULL
);

-- Tạo bảng Song_Singer
CREATE TABLE Song_Singer (
    song_id INT,
    singer_id INT,
    PRIMARY KEY (song_id, singer_id),
    FOREIGN KEY (song_id) REFERENCES Song(song_id),
    FOREIGN KEY (singer_id) REFERENCES Singer(singer_id)
);

-- Tạo bảng Category
CREATE TABLE Category (
    category_id INT PRIMARY KEY,
    category_name VARCHAR(100) UNIQUE NOT NULL
);

-- Tạo bảng SongCategory
CREATE TABLE SongCategory (
    song_id INT,
    category_id INT,
    PRIMARY KEY (song_id, category_id),
    FOREIGN KEY (song_id) REFERENCES Song(song_id),
    FOREIGN KEY (category_id) REFERENCES Category(category_id)
);

-- Tạo bảng MembershipPackage
CREATE TABLE MembershipPackage (
    package_id INT PRIMARY KEY,
    package_name VARCHAR(100) UNIQUE NOT NULL,
    duration INT, -- Đơn vị là tháng
    price DECIMAL (10,2)
);

-- Tạo bảng trung gian AccountMembership
CREATE TABLE AccountMembership (
    account_membership_id INT PRIMARY KEY,
    account_id INT,
    package_id INT,
    start_date DATETIME DEFAULT GETDATE(),
    end_date DATETIME,
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (package_id) REFERENCES MembershipPackage(package_id)
);

-- Tạo bảng TransactionHistory
CREATE TABLE TransactionHistory (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    package_id INT,
    transaction_date DATETIME,
    amount DECIMAL(10,2),
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (package_id) REFERENCES MembershipPackage(package_id)
);

-- Tạo bảng Payment
CREATE TABLE Payment (
    payment_id INT PRIMARY KEY,
    transaction_id INT,
    payment_date DATETIME,
    amount DECIMAL(10,2),
    payment_method VARCHAR(50),
    FOREIGN KEY (transaction_id) REFERENCES TransactionHistory(transaction_id)
);

-- Tạo bảng AccountVerification
CREATE TABLE AccountVerification (
    verification_id INT PRIMARY KEY,
    account_id INT,
    verification_code VARCHAR(100),
    is_verified BIT DEFAULT 0,
    FOREIGN KEY (account_id) REFERENCES Account(account_id)
);

-- Tạo bảng Notification
CREATE TABLE Notification (
    notification_id INT PRIMARY KEY,
    account_id INT,
    message TEXT,
    created_at DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (account_id) REFERENCES Account(account_id)
);
