package com.demo.entities;
// Generated May 8, 2024, 11:11:08â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;


/**
 * Song generated by hbm2java
 */
@Entity
@Table(name = "song", catalog = "bachu_database")
public class Song implements java.io.Serializable {

	private Integer songId;
	private Category category;
	private Album album;
	private Author author;
	private Songdetail songdetail;
	private Set<AccountSong> accountSongs = new HashSet<>(0);

	public Song() {
	}


	public Song(Category category, Album album, Author author, Songdetail songdetail, Set<AccountSong> accountSongs) {
		this.category = category;
		this.album = album;
		this.author = author;
		this.songdetail = songdetail;
		this.accountSongs = accountSongs;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "song_id", unique = true, nullable = false)
	public Integer getSongId() {
		return this.songId;
	}

	public void setSongId(Integer songId) {
		this.songId = songId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "album_id")
	public Album getAlbum() {
		return this.album;
	}

	public void setAlbum(Album album) {
		this.album = album;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id")
	public Author getAuthor() {
		return this.author;
	}

	public void setAuthor(Author author) {
		this.author = author;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "song_detail_id")
	public Songdetail getSongdetail() {
		return this.songdetail;
	}

	public void setSongdetail(Songdetail songdetail) {
		this.songdetail = songdetail;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "song")
	public Set<AccountSong> getAccountSongs() {
		return this.accountSongs;
	}

	public void setAccountSongs(Set<AccountSong> accountSongs) {
		this.accountSongs = accountSongs;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

}
