package com.demo.entities;
// Generated May 8, 2024, 11:11:08â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;


/**
 * Singer generated by hbm2java
 */
@Entity
@Table(name = "singer", catalog = "bachu_database", uniqueConstraints = @UniqueConstraint(columnNames = "singer_name"))
public class Singer implements java.io.Serializable {

	private Integer singerId;
	private String singerName;
	private String singerAvatarUrl;
	private String description;
	private Set<Song> songs = new HashSet<>(0);

	public Singer() {
	}

	public Singer(String singerName) {
		this.singerName = singerName;
	}

	public Singer(String singerName, String singerAvatarUrl, String description, Set<Song> songs) {
		this.singerName = singerName;
		this.singerAvatarUrl = singerAvatarUrl;
		this.description = description;
		this.songs = songs;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "singer_id", unique = true, nullable = false)
	public Integer getSingerId() {
		return this.singerId;
	}

	public void setSingerId(Integer singerId) {
		this.singerId = singerId;
	}

	@Column(name = "singer_name", unique = true, nullable = false)
	public String getSingerName() {
		return this.singerName;
	}

	public void setSingerName(String singerName) {
		this.singerName = singerName;
	}

	@Column(name = "singer_avatar_url")
	public String getSingerAvatarUrl() {
		return this.singerAvatarUrl;
	}

	public void setSingerAvatarUrl(String singerAvatarUrl) {
		this.singerAvatarUrl = singerAvatarUrl;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "singer")
	public Set<Song> getSongs() {
		return this.songs;
	}

	public void setSongs(Set<Song> songs) {
		this.songs = songs;
	}

}
